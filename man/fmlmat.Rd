% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmlmat.r
\name{fmlmat}
\alias{fmlmat}
\title{fmlmat}
\usage{
fmlmat(x, nrows, ncols, type = "double", backend = "cpu")
}
\arguments{
\item{x}{A numeric R matrix/vector. Can be of integer or double type, or a
\code{float32} object of float data (from the float package).}

\item{nrows, ncols}{The number of rows/columns for a skeleton matrix.}

\item{type}{The fundamental type. Should be one of \code{"int"}, \code{"float"}, or
\code{"double"}.}

\item{backend}{Should be one of \code{"cpu"}, \code{"gpu"}, or \code{"mpi"}.}
}
\value{
An \code{fmlmat} class object.
}
\description{
Cast an R matrix as an \code{fmlmat} object, or create a skeleton
\code{fmlmat} object.
}
\details{
Must pass either \code{x} (an R object to cast) or \code{nrows}/\code{ncols},
but not both.

GPU data will use the defaults from \code{fmlr::card()}, and MPI data will
use the defaults from \code{fmlr::grid()}. If you need more control, you
should use the fmlr constructors and convert with \code{craze::as_fmlmat()}.
}
\examples{
suppressMessages(library(craze))

x = matrix(as.double(1:6), 3)
x_cpu = fmlmat(x)
x_cpu

}
